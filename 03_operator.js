// 연산자 -> 1개 이상의 피연산자와 함께 사용해서 계산을 하는 특수기호나 문구

// [산술연산자]
// 사칙연산. 나누기 곱하기 -> 키보드에 없음. -> 엑셀.

// + - * /
console.log("1 + 1 =", 1 + 1);
console.log("2 - 3 =", 2 - 3);
console.log("3 * 4 =", 3 * 4);
console.log("5 / 10 =", 5 / 10); // `//`는 주석이고. / 나누기.
// % **
console.log("100 / 8 =", 100 / 8);
console.log("100 % 8 =", 100 % 8); // 나머지
console.log("2 ** 4 =", 2 ** 4); // 거듭제곱(승)
console.log("2 ** 0.5 =", 2 ** 0.5);
console.log("2 ** (1/3) =", 2 ** (1 / 3));
// ()를 통해서 명시적으로 먼저 계산할 수 있다
// 연산자에는 각각의 우선순위들이 있는데 일반적으로 외우기보다는 ()를 통해서 먼저 계산하게 하면 된다

// 대입(할당)연산자, 복합대입연산자
// =
// 변수에 값을 주입/할당하는 연산자

// [복합 대입 연산자]
// 산술 연산자와 대입 연산자를 결합한 형태의 연산자입니다.
// 코드의 길이를 줄여주고, 가독성을 높여주는 장점이 있습니다.
// 예를 들어, 'a = a + 10;' 와 'a += 10;'은 동일한 작업을 수행합니다.
// 복합 대입 연산자는 내부적으로 더 효율적인 코드를 생성할 수 있으며,
// 특히 변수의 값을 직접 수정(in-place modification)하는 경우에 유용합니다.
// 지원되는 연산자: +=, -=, *=, /=, %=, **=
let a = 10;
a = a + 10;
console.log("a", a);

// a += 10; 와 a = a + 10; 은 같습니다.
a += 10; 
console.log("a", a);

// a -= 5; 와 a = a - 5; 는 같습니다.
a -= 5; 
console.log("a", a);

// a *= 2; 와 a = a * 2; 는 같습니다.
a *= 2; 
console.log("a", a);

// a /= 10; 와 a = a / 10; 은 같습니다.
a /= 10; 
console.log("a", a);

// a %= 3; 와 a = a % 3; 은 같습니다.
a %= 3; 
console.log("a", a);

// +-*/%**...
